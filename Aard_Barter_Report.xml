<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, August 17, 2016, 9:49 AM -->
<!-- MuClient version 5.01 -->

<!-- Plugin "Aard_Barter_Report" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Aard_Barter_Report"
   author="Endymion"
   id="0513066d6617099a02ce73b7"
   language="Lua"
   purpose="Advertise item attributes on barter."
   date_written="2016-08-17 09:48:37"
   requires="4.30"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Aliases  -->

<aliases>
  <alias
   match="^brep (?<num>[\d]{1,5})?(?<id>[\d]{6,}|(\d+\.)?\w+?( worn)?)?( (?<chan>[\w ]+))?$"
   enabled="y"
   regexp="y"
   script="barter_report"
   sequence="100"
  >
  </alias>
  <alias
   match="^brep.*$"
   enabled="y"
   regexp="y"
   script="barter_help"
   sequence="101"
  >
  </alias>
</aliases>


<!--  Triggers  -->

<triggers>
    <trigger 
	enabled="n"
	match="^\| Name       : (?<name>.+)\s+\|$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_name"
	group="item"
	>
	</trigger>
    <trigger 
	enabled="n"
	match="^\| Id         : (?<id>\d+)\s+\|$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_id"
	group="item"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\| Type       : (?<type>[\w:]+) \s+Level  :\s+(?<level>\d+)\s+\|$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_level"
	group="item"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\| Wearable   : (?<wear>\w+)\s+\|$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_wear"
	group="item"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\| Weapon Type: (?<weapon>[^\s]+)\s+Average Dam :\s+(?<damage>\d+)\s+\|$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_weapon"
	group="item"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\| Flags      : (?<flags>.+)\s+\|$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_flags"
	group="item"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\|            : (?<flags>.+)\s+\|$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_flags"
	name="more_flags"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\+.+$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="end_flags"
	name="end_flags"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\| Stat Mods  : (?<stat>[\w ]+) : (?<mod>[+|-])(?<num>\d+)\s+((?<stat2>[\w ]+) : (?<mod2>[+|-])(?<num2>\d+))?\s+\|$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_stats"
	group="item"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\| (?<what>Illuminate) : (?<stat>[\w ]+) \+(?<num>\d)\s+\(removable.+$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_enchants"
	group="item"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\|            : (?<stat>[\w ]+) \+(?<num>\d)\s+\(removable.+$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_enchants"
	group="item"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\| (?<what>Solidify)   : (?<stat>[\w ]+) \+(?<num>\d)\s+\(removable.+$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_enchants"
	group="item"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\| (?<what>Resonate)   : (?<stat>[\w ]+) \+(?<num>\d)\s+\(removable.+$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_enchants"
	group="item"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\| Leads to   : (?<where>.+)\|$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_destination"
	group="item"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\|              (?<stat>[\w ]+) : (?<mod>[+|-])(?<num>\d+)\s+((?<stat2>[\w ]+) : (?<mod2>[+|-])(?<num2>\d+))?\s+\|$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="set_stats"
	name="more_stats"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\+.+$"
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="end_stats"
	name="end_stats"
	>
	</trigger>
	<trigger 
	enabled="n"
	match="^\{end_brep\}"
	omit_from_output="y"
	sequence="100"
	regexp="y"
	script="report_barter"
	group="item"
	>
	</trigger>Current bid on this item is .+$|^\| Current bid .+|
	<trigger 
	enabled="n"
	match="^There is no (marketplace|auction) item with that id\.|You do not have that item\.|You do not have that item worn\."
	omit_from_output="n"
	sequence="100"
	regexp="y"
	script="cancel_brep"
	group="item"
	>
	</trigger>
</triggers>

<!--  Script  -->

<script>
<![CDATA[
require "tprint"

local color_to = {
	["c0c0c0"] = "000",
	["800000"] = "001",
	["008000"] = "002",
	["808000"] = "003",
	["000080"] = "004",
	["800080"] = "005",
	["008080"] = "006",
	["c0c0c0"] = "007",
	["808080"] = "008",
	["ff0000"] = "009",
	["00ff00"] = "010",
	["ffff00"] = "011",
	["0000ff"] = "012",
	["ff00ff"] = "013",
	["00ffff"] = "014",
	["ffffff"] = "015",
	["000000"] = "016",
	["00005f"] = "017",
	["000087"] = "018",
	["0000af"] = "019",
	["0000d7"] = "020",
	["0000ff"] = "021",
	["005f00"] = "022",
	["005f5f"] = "023",
	["005f87"] = "024",
	["005faf"] = "025",
	["005fd7"] = "026",
	["005fff"] = "027",
	["008700"] = "028",
	["00875f"] = "029",
	["008787"] = "030",
	["0087af"] = "031",
	["0087d7"] = "032",
	["0087ff"] = "033",
	["00af00"] = "034",
	["00af5f"] = "035",
	["00af87"] = "036",
	["00afaf"] = "037",
	["00afd7"] = "038",
	["00afff"] = "039",
	["00d700"] = "040",
	["00d75f"] = "041",
	["00d787"] = "042",
	["00d7af"] = "043",
	["00d7d7"] = "044",
	["00d7ff"] = "045",
	["00ff00"] = "046",
	["00ff5f"] = "047",
	["00ff87"] = "048",
	["00ffaf"] = "049",
	["00ffd7"] = "050",
	["00ffff"] = "051",
	["5f0000"] = "052",
	["5f005f"] = "053",
	["5f0087"] = "054",
	["5f00af"] = "055",
	["5f00d7"] = "056",
	["5f00ff"] = "057",
	["5f5f00"] = "058",
	["5f5f5f"] = "059",
	["5f5f87"] = "060",
	["5f5faf"] = "061",
	["5f5fd7"] = "062",
	["5f5fff"] = "063",
	["5f8700"] = "064",
	["5f875f"] = "065",
	["5f8787"] = "066",
	["5f87af"] = "067",
	["5f87d7"] = "068",
	["5f87ff"] = "069",
	["5faf00"] = "070",
	["5faf5f"] = "071",
	["5faf87"] = "072",
	["5fafaf"] = "073",
	["5fafd7"] = "074",
	["5fafff"] = "075",
	["5fd700"] = "076",
	["5fd75f"] = "077",
	["5fd787"] = "078",
	["5fd7af"] = "079",
	["5fd7d7"] = "080",
	["5fd7ff"] = "081",
	["5fff00"] = "082",
	["5fff5f"] = "083",
	["5fff87"] = "084",
	["5fffaf"] = "085",
	["5fffd7"] = "086",
	["5fffff"] = "087",
	["870000"] = "088",
	["87005f"] = "089",
	["870087"] = "090",
	["8700af"] = "091",
	["8700d7"] = "092",
	["8700ff"] = "093",
	["875f00"] = "094",
	["875f5f"] = "095",
	["875f87"] = "096",
	["875faf"] = "097",
	["875fd7"] = "098",
	["875fff"] = "099",
	["878700"] = "100",
	["87875f"] = "101",
	["878787"] = "102",
	["8787af"] = "103",
	["8787d7"] = "104",
	["8787ff"] = "105",
	["87af00"] = "106",
	["87af5f"] = "107",
	["87af87"] = "108",
	["87afaf"] = "109",
	["87afd7"] = "110",
	["87afff"] = "111",
	["87d700"] = "112",
	["87d75f"] = "113",
	["87d787"] = "114",
	["87d7af"] = "115",
	["87d7d7"] = "116",
	["87d7ff"] = "117",
	["87ff00"] = "118",
	["87ff5f"] = "119",
	["87ff87"] = "120",
	["87ffaf"] = "121",
	["87ffd7"] = "122",
	["87ffff"] = "123",
	["af0000"] = "124",
	["af005f"] = "125",
	["af0087"] = "126",
	["af00af"] = "127",
	["af00d7"] = "128",
	["af00ff"] = "129",
	["af5f00"] = "130",
	["af5f5f"] = "131",
	["af5f87"] = "132",
	["af5faf"] = "133",
	["af5fd7"] = "134",
	["af5fff"] = "135",
	["af8700"] = "136",
	["af875f"] = "137",
	["af8787"] = "138",
	["af87af"] = "139",
	["af87d7"] = "140",
	["af87ff"] = "141",
	["afaf00"] = "142",
	["afaf5f"] = "143",
	["afaf87"] = "144",
	["afafaf"] = "145",
	["afafd7"] = "146",
	["afafff"] = "147",
	["afd700"] = "148",
	["afd75f"] = "149",
	["afd787"] = "150",
	["afd7af"] = "151",
	["afd7d7"] = "152",
	["afd7ff"] = "153",
	["afff00"] = "154",
	["afff5f"] = "155",
	["afff87"] = "156",
	["afffaf"] = "157",
	["afffd7"] = "158",
	["afffff"] = "159",
	["d70000"] = "160",
	["d7005f"] = "161",
	["d70087"] = "162",
	["d700af"] = "163",
	["d700d7"] = "164",
	["d700ff"] = "165",
	["d75f00"] = "166",
	["d75f5f"] = "167",
	["d75f87"] = "168",
	["d75faf"] = "169",
	["d75fd7"] = "170",
	["d75fff"] = "171",
	["d78700"] = "172",
	["d7875f"] = "173",
	["d78787"] = "174",
	["d787af"] = "175",
	["d787d7"] = "176",
	["d787ff"] = "177",
	["d7af00"] = "178",
	["d7af5f"] = "179",
	["d7af87"] = "180",
	["d7afaf"] = "181",
	["d7afd7"] = "182",
	["d7afff"] = "183",
	["d7d700"] = "184",
	["d7d75f"] = "185",
	["d7d787"] = "186",
	["d7d7af"] = "187",
	["d7d7d7"] = "188",
	["d7d7ff"] = "189",
	["d7ff00"] = "190",
	["d7ff5f"] = "191",
	["d7ff87"] = "192",
	["d7ffaf"] = "193",
	["d7ffd7"] = "194",
	["d7ffff"] = "195",
	["ff0000"] = "196",
	["ff005f"] = "197",
	["ff0087"] = "198",
	["ff00af"] = "199",
	["ff00d7"] = "200",
	["ff00ff"] = "201",
	["ff5f00"] = "202",
	["ff5f5f"] = "203",
	["ff5f87"] = "204",
	["ff5faf"] = "205",
	["ff5fd7"] = "206",
	["ff5fff"] = "207",
	["ff8700"] = "208",
	["ff875f"] = "209",
	["ff8787"] = "210",
	["ff87af"] = "211",
	["ff87d7"] = "212",
	["ff87ff"] = "213",
	["ffaf00"] = "214",
	["ffaf5f"] = "215",
	["ffaf87"] = "216",
	["ffafaf"] = "217",
	["ffafd7"] = "218",
	["ffafff"] = "219",
	["ffd700"] = "220",
	["ffd75f"] = "221",
	["ffd787"] = "222",
	["ffd7af"] = "223",
	["ffd7d7"] = "224",
	["ffd7ff"] = "225",
	["ffff00"] = "226",
	["ffff5f"] = "227",
	["ffff87"] = "228",
	["ffffaf"] = "229",
	["ffffd7"] = "230",
	["ffffff"] = "231",
	["080808"] = "232",
	["121212"] = "233",
	["1c1c1c"] = "234",
	["262626"] = "235",
	["303030"] = "236",
	["3a3a3a"] = "237",
	["444444"] = "238",
	["4e4e4e"] = "239",
	["585858"] = "240",
	["626262"] = "241",
	["6c6c6c"] = "242",
	["767676"] = "243",
	["808080"] = "244",
	["8a8a8a"] = "245",
	["949494"] = "246",
	["9e9e9e"] = "247",
	["a8a8a8"] = "248",
	["b2b2b2"] = "249",
	["bcbcbc"] = "250",
	["c6c6c6"] = "251",
	["d0d0d0"] = "252",
	["dadada"] = "253",
	["e4e4e4"] = "254",
	["eeeeee"] = "255"
}

local stat_lookup = {
	["Hit roll"] = "HR", ["Damage roll"] = "DR", ["Hit points"] = "Hp", ["Mana"] = "Mn", ["Moves"] = "Mv", ["Strength"] = "Str", ["Intelligence"] = "Int", ["Wisdom"] = "Wis", ["Dexterity"] = "Dex", ["Constitution"] = "Con", ["Luck"] = "Luck",  
}

local one_point = {"Strength", "Intelligence", "Wisdom", "Dexterity", "Constitution", "Luck"}
local half_point = {"Hit roll", "Damage roll"}
local tenth_point = {"Hit points", "Mana", "Moves"}


local item = {num = 0, flags = "", stats = {}}
local which = ""
local chan = ""
local enchant = ""
ill = 0
res = 0
sol = 0

function barter_help()
	ColourNote("gray", "", "-------------------------------------------------------------------")
	ColourNote("white", "", "  Syntax is: ", "cyan", "", "brep # <channel>")
	ColourNote("white", "", "    It will work for bid or lbid items.  Channel is optional.")
	ColourNote("white", "", "  Now works with inventory items!")
	ColourNote("white", "", "   Syntax is: ", "cyan", "", "brep <item id or keyword> <channel>")
	ColourNote("white", "", "    Channel is optional.")
	ColourNote("gray", "", "-------------------------------------------------------------------")
end

function barter_report(name, line, args)
	local what = args.num..args.id
	if tonumber(what) and string.len(what) == 5 then
		which = "lbid"
	elseif tonumber(what) and string.len(what) <= 3 then
		which = "bid"
	else
		which = "identify"
	end
	if args.chan ~= "" then
		chan = args.chan
	else
		chan = "echo"
	end
	item = {flags = "", stats = {}}
	ill = 0
	res = 0
	sol = 0
	EnableTriggerGroup("item", true)
	item.num = what
	SendNoEcho(which.." "..what)
	SendNoEcho("echo {end_brep}")
end

function cancel_brep()
	EnableTriggerGroup("item", false)
end

function set_id(name, line, args)
	item.id = args.id
end

function set_name(name, line, args, styles)
	item.name = {}
	if styles[3].length >= 10 then -- item name is white same as colon so pull the name out
		table.insert(item.name, {color = "@x"..color_to[dec_hex(styles[3].textcolour)], text = string.sub(styles[3].text, string.find(styles[3].text, ":") + 2)})
	end
	if #styles >= 4 then
		for i = 4, #styles do
			table.insert(item.name, {color = "@x"..color_to[dec_hex(styles[i].textcolour)], text = styles[i].text})
		end
	end
end

function set_level(name, line, args)
	item.type = args.type
	item.level = args.level
end

function set_wear(name, line, args)
	item.wear = args.wear
end

function set_weapon(name, line, args)
	item.weapon = args.weapon
	item.damage = args.damage
end

function set_flags(name, line, args)
	EnableTrigger("more_flags", true)
	EnableTrigger("end_flags", true)
	item.flags = item.flags..args.flags
end

function end_flags()
	EnableTrigger("set_flags", false)
	EnableTrigger("more_flags", false)
	EnableTrigger("end_flags", false)
end

function set_enchants(name, line, args)
	if args.what == "Illuminate" then
		enchant = "ill"
	elseif args.what == "Resonate" then
		enchant = "res"
	elseif args.what == "Solidify" then
		enchant = "sol"
	end
	loadstring(enchant.." = "..enchant.." + "..args.num)()
end

function set_destination(name, line, args)
	item.destination = args.where
end

function set_stats(name, line, args)
	EnableTrigger("more_flags", false)
	EnableTrigger("more_stats", true)
	EnableTrigger("end_stats", true)
	table.insert(item.stats, {stat = trim(args.stat), mod = args.mod, num = args.num})
	if args.stat2 ~= "" then
		table.insert(item.stats, {stat = trim(args.stat2), mod = args.mod2, num = args.num2})
	end
end

function in_table(t, val)
	for _, v in ipairs(t) do
		if v == val then
			return true
		end
	end
	return false
end

function get_points()
	local p = 0
	for _, s in pairs(item.stats) do
		if in_table(one_point, s.stat) then
			p = p + loadstring("return 0"..s.mod..s.num)()
		elseif in_table(half_point, s.stat) then
			p = p + (loadstring("return 0"..s.mod..s.num)() * .5)
		elseif in_table(tenth_point, s.stat) then
			p = p + (loadstring("return 0"..s.mod..s.num)() * .1)
		end
	end
	return p
end

function end_stats()
	EnableTrigger("set_stats", false)
	EnableTrigger("more_stats", false)
	EnableTrigger("end_stats", false)
end

function report_barter()
	EnableTriggerGroup("item", false)
	local nm = ""
	for i, p in ipairs(item.name) do
		nm = nm..p.color..p.text
	end
	nm = trim(string.sub(nm, 1, string.len(nm) - 1))
	local str = "@x008[@W"..which.." @x180"
	if item.num ~= "" then
		str = str..item.num
	else
		str = str..item.id
	end
	str = str.."@x008] "..nm
	if item.type == "Armor" or item.type == "Light" or item.type == "Boat" then
		str = str.." @x008[@wLvl @W"..item.level.."@x177 "..string_capitalize(item.wear).."@x008] "
	elseif item.type == "Weapon" then
		str = str.." @x008[@wLvl @W"..item.level.."@x177 "..string_capitalize(item.weapon).."@x008|@W"..item.damage.." @x177Dmg@x008] "
	elseif item.type == "Portal" then
		str = str.." @x008[@wLvl @W"..item.level.."@x177 "..string_capitalize(item.type).."@w to @x165"..trim(item.destination).."@x008] "
	elseif item.type == "Drink" then
		str = str.." @x008[@wLvl @W"..item.level.."@x177 "..string_capitalize(item.type).."@x008] "
	elseif item.type == "Raw material:Ore" then
		-- nothing
	else
		str = str.." "
	end
	local p = get_points()
	if p ~= 0 then
		str = str.."@x008[@W"..get_points().."@x214 Pts@x008] "
	end
	str = str..is_raw()
	str = str..is_max()
	local mcolor = ""
	local order = {"DR", "HR", "Str", "Int", "Wis", "Dex", "Con", "Luck", "Hp", "Mn", "Mv"}
	local scolor = {"@G", "@G", "@x039", "@x039", "@x039", "@x039", "@x039", "@x039", "@x228", "@x228", "@x228"}
	if #item.stats > 0 then
		str = str.."@x008["
	end
	local x = 0
	for c, o in ipairs(order) do
		for i, s in pairs(item.stats) do
			if short_stat(s.stat) == o then
				x = x + 1
				if s.mod == "+" then
					mcolor = "@W"
				else
					mcolor = "@R".."-"
				end
				str = str..mcolor..s.num.." "..scolor[c]..short_stat(s.stat)
				if x < #item.stats then
					str = str.."@x008|"
				else
					str = str.."@x008]"
				end
			end
		end
	end
	SendNoEcho(chan.." "..str)
end

function short_stat(s)
	return stat_lookup[s] or s
end

function is_max()
	local maxs, maxi, maxr = "", "", ""
	if sol == 6 then
		maxs = "Sol"
	end
	if sol == 6 and res == 5 then
		maxr = "@R/@WRes"
	elseif res == 5 then
		maxr = "Res"
	end
	if (sol == 6 or res == 5) and ill == 8 then
		maxi = "@R/@WIll"
	elseif ill == 8 then
		maxi = "Ill"
	end
	
	if maxs..maxr..maxi == "" then
		return ""
	end
	
	return "@x008[@R**@WMax "..maxs..maxi..maxr.."@R**@x008] "
end

function is_raw()
	if string.find(item.flags, "invis") and not string.find(item.flags, "hum") and not string.find(item.flags, "glow") then
		return "@x008[@wR@WA@CW@x008] "
	end
	local e = ""
	if string.find(item.flags, "invis") then
		e = e.."@x027S"
	end
	if not string.find(item.flags, "glow") then
		if e ~= "" then
			e = e.."@w|"
		end
		e = e.."@MI"
	end
	if not string.find(item.flags, "hum") then
		if e ~= "" then
			e = e.."@w|"
		end
		e = e.."@CR"
	end
	if e ~= "" then
		return "@x008["..e.."@x008] "
	else
		return ""
	end
end

function dec_hex(d)
	local out = string.format("%x", d)
    if string.len(out) == 2 then
		return out.."0000"
	elseif string.len(out) == 4 then
		return string.sub(out, 3, 4)..string.sub(out, 1, 2).."00"
	else
		return string.sub(out, 5, 6)..string.sub(out, 3, 4)..string.sub(out, 1, 2)
	end
end

function trim(str)
  return (str:gsub("^%s*(.-)%s*$", "%1"))
end

function string_capitalize(str)
    return (string.upper(string.sub(str, 1, 1))..string.sub(str, 2))
end

ColourNote("white", "", "  Barter report plugin installed.")
DoAfterSpecial(.2, "barter_help()", 12)
]]>
</script>
</muclient>
